{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCK,IAAMC,EAAgB,WAC3B,MAAgCC,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAmBMC,EAnDR,SACEC,EACAL,EACAE,GAEA,IAAME,EAAY,YAAOC,GAsBzB,OApBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,IAAK,WACH,OAAOO,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITR,GACFE,EAAaO,UAIfC,QAAQC,IAAIb,EAAUE,GAEfE,EAwBcU,CAAkBjB,EAAiBG,EAAUE,GAElE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,aAAbf,EACzB,WACA,IACJiB,QA3B0B,WAChChB,EAAY,aAqBR,iCAUA,wBACEe,KAAK,SACLD,UAAS,4BAAoC,WAAbf,EAC5B,WACA,IAEJiB,QAlCwB,WAC9BhB,EAAY,WA2BR,4BAWA,wBACEe,KAAK,SACLD,UAAS,4BAAwBb,EAE7B,GADA,YAGJe,QAzCmB,WACzBd,GAAeD,IAkCX,sBAWe,SAAbF,GAAuBE,IACvB,wBACEc,KAAK,SACLD,UAAU,4BACVE,QA9Ce,WACvBhB,EAAY,QACZE,GAAc,IAyCR,sBAUJ,6BACE,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCpHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7fcb3945.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: string,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case 'ALPHABET':\n        return good1.localeCompare(good2);\n\n      case 'LENGTH':\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState('NONE');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleClickSortByAlphabet = () => {\n    setSortType('ALPHABET');\n  };\n\n  const handleClickSortByLength = () => {\n    setSortType('LENGTH');\n  };\n\n  const handleClickReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleClickReset = () => {\n    setSortType('NONE');\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== 'ALPHABET'\n            ? 'is-light'\n            : ''}`}\n          onClick={handleClickSortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== 'LENGTH'\n            ? 'is-light'\n            : ''\n          }`}\n          onClick={handleClickSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed\n            ? 'is-light'\n            : ''\n          }`}\n          onClick={handleClickReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'NONE' || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleClickReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}